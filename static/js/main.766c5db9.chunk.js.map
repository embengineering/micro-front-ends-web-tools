{"version":3,"sources":["utilities.js","history.js","routes.js","index.js"],"names":["handleError","error","console","handleSucess","location","manifest","data","log","style","document","createElement","script","rel","href","type","src","head","appendChild","body","loadManifest","axios","get","headers","then","bind","catch","createBrowserHistory","baseUrl","history","pathname","navItems","JSON","stringify","navBar","routes","path","action","title","html","bindNavLinks","querySelectorAll","forEach","navLink","addEventListener","onClick","event","preventDefault","push","currentTarget","getAttribute","render","UniversalRouter","resolve","route","querySelector","innerHTML","listen","onreadystatechange","readyState"],"mappings":"uMAGMA,EAAc,SAAAC,GAAK,OACrBC,QAAQD,MAAMA,IAEZE,EAAe,SAACC,EAAD,GAAmC,IAAhBC,EAAe,EAArBC,KAC9BJ,QAAQK,IAAI,iCAAkCF,GAE9C,IAAIG,EAAQC,SAASC,cAAc,QAC/BC,EAASF,SAASC,cAAc,UAEpCF,EAAMI,IAAM,aACZJ,EAAMK,KAAN,UAAgBT,EAAhB,YAA4BC,EAAS,aAErCM,EAAOG,KAAO,kBACdH,EAAOI,IAAP,UAAgBX,EAAhB,YAA4BC,EAAS,YAErCI,SAASO,KAAKC,YAAYT,GAC1BC,SAASS,KAAKD,YAAYN,IAGxBQ,EAAe,SAAAf,GAAQ,OACzBgB,IAAMC,IAAN,UAAajB,EAAb,wBAA6C,CACzCkB,QAAS,CACL,gBAAiB,WACjB,8BAA+B,OAGtCC,KAAKpB,EAAaqB,K,UAAWpB,IAC7BqB,MAAMzB,I,kBC7BI0B,gBCETC,EAAUC,EAAQxB,SAAWwB,EAAQxB,SAASyB,SAAW,IAEzDC,EAAWC,KAAKC,UAAU,CAC9B,CAAE,QAAU,EAAO,MAAS,QAAS,KAAO,GAAP,OAAWL,EAAX,UACrC,CAAE,QAAU,EAAO,MAAS,WAAY,KAAO,GAAP,OAAWA,EAAX,UAGpCM,EAAM,sCARK,YAQL,qBACoCH,EADpC,0BAgCGI,EA5BA,CACb,CACEC,KAAK,GAAD,OAAKR,EAAL,SACJS,OAFF,WAGI,MAAO,CACLC,MAAO,QACPC,KAAK,eAAD,OACAL,EADA,wEAQV,CACEE,KAAK,GAAD,OAAKR,EAAL,QACJS,OAFF,WAGI,MAAO,CACLC,MAAO,iBACPC,KAAK,eAAD,OACAL,EADA,6EC3BNN,EAAUC,EAAQxB,SAAWwB,EAAQxB,SAASyB,SAAW,IAoB/D,SAASU,IACP9B,SAAS+B,iBAAiB,aAAaC,SAAQ,SAAAC,GAC7CA,EAAQC,iBAAiB,QAASC,MAItC,SAASA,EAAQC,GACfA,EAAMC,iBACNlB,EAAQmB,KAAKF,EAAMG,cAAcC,aAAa,SAGhD,SAASC,EAAO9C,GACC,IAAI+C,IAAgBjB,GAC5BkB,QAAQhD,EAASyB,UAAUN,MAAK,SAAA8B,GACrC5C,SAAS4B,MAAQgB,EAAMhB,MACvB5B,SAAS6C,cAAc,SAASC,UAAYF,EAAMf,KAClDC,OAjCJpB,EAAa,sCACbA,EAAa,UACbA,EAAa,iCAGb+B,EAAO,CAAErB,SAAS,GAAD,OAAKF,EAAL,WAGjBC,EAAQ4B,OAAON,GAGfzC,SAASgD,mBAAqB,WACA,aAAxBhD,SAASiD,YACXnB,O","file":"static/js/main.766c5db9.chunk.js","sourcesContent":["import 'babel-polyfill';\nimport axios from 'axios';\n\nconst handleError = error =>\n    console.error(error);\n\nconst handleSucess = (location, { data: manifest }) => {\n    console.log('Manifest configuration loaded:', manifest);\n\n    let style = document.createElement('link');\n    let script = document.createElement('script');\n\n    style.rel = 'stylesheet';\n    style.href = `${location}/${manifest['main.css']}`;\n\n    script.type = 'text/javascript';\n    script.src = `${location}/${manifest['main.js']}`;\n\n    document.head.appendChild(style);\n    document.body.appendChild(script);\n};\n\nconst loadManifest = location =>\n    axios.get(`${location}/asset-manifest.json`, {\n        headers: {\n            'Cache-Control': 'no-cache',\n            'Access-Control-Allow-Origin': '*'\n        }\n    })\n    .then(handleSucess.bind(this, location))\n    .catch(handleError);\n\nexport {\n  loadManifest\n};","import {createBrowserHistory} from 'history';\nexport default createBrowserHistory();","import history from './history';\n\nconst navTitle = 'Web Tools';\nconst baseUrl = history.location ? history.location.pathname : '/';\n\nconst navItems = JSON.stringify([\n  { \"active\": false, \"label\": \"Tally\", \"href\": `${baseUrl}tally` },\n  { \"active\": false, \"label\": \"404 Page\", \"href\": `${baseUrl}404` }\n]);\n\nconst navBar = `\n  <standard-navbar title=\"${navTitle}\" items='${navItems}'></standard-navbar>\n`;\n\nconst routes = [\n  {\n    path: `${baseUrl}tally`,\n    action() {\n      return {\n        title: 'Tally',\n        html: `\n          ${navBar}\n          <br />\n          <tally-tool></tally-tool>\n        `\n      };\n    }\n  },\n  {\n    path: `${baseUrl}(.*)`, // wildcard route (must go last)\n    action() {\n      return {\n        title: 'Page Not Found',\n        html: `\n          ${navBar}\n          <error-page title=\"404 Not Found\"></error-page>\n        `,\n      };\n    },\n  },\n];\n\nexport default routes;","import './index.css';\nimport { loadManifest } from './utilities';\nimport UniversalRouter from 'universal-router';\nimport routes from './routes';\nimport history from './history';\n\nconst baseUrl = history.location ? history.location.pathname : '/';\n\n// load micro frontends manifests\nloadManifest('/micro-front-ends-standard-nav-bar');\nloadManifest('/tally');\nloadManifest('/micro-front-ends-error-pages');\n\n// initialize the app\nrender({ pathname: `${baseUrl}tally` });\n\n// listen for client-side navigation\nhistory.listen(render);\n\n// prevent full refresh on nav links click\ndocument.onreadystatechange = function () {\n  if (document.readyState === 'complete') {\n    bindNavLinks();\n  }\n};\n\nfunction bindNavLinks() {\n  document.querySelectorAll('.nav-link').forEach(navLink => {\n    navLink.addEventListener('click', onClick)\n  });\n}\n\nfunction onClick(event) {\n  event.preventDefault(); // prevent full page reload\n  history.push(event.currentTarget.getAttribute('href')); // do SPA navigation\n}\n\nfunction render(location) {\n  const router = new UniversalRouter(routes);\n  router.resolve(location.pathname).then(route => {\n    document.title = route.title;\n    document.querySelector('#main').innerHTML = route.html;\n    bindNavLinks();\n  });\n}"],"sourceRoot":""}